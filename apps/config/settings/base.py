"""
Django settings for moca project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
from os.path import join
from datetime import timedelta


AUTH_USER_MODEL = 'moca.User'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
  # Django
  'django.contrib.admin',
  'django.contrib.auth',
  'django.contrib.contenttypes',
  'django.contrib.sessions',
  'django.contrib.messages',
  'django.contrib.staticfiles',
  'django.contrib.gis',
  # 3rd party
  'rest_framework',
  'corsheaders',
  'knox',
  'rest_framework_gis',
  'drf_yasg',
  # Apps
  'moca.apps.MocaConfig',
]

LOGGING = {
  'version': 1,
  'disable_existing_loggers': False,
  'handlers': {
    'console': {
      'class': 'logging.StreamHandler',
    }
  },
  'loggers': {
    # 'moca.userapi': {
    #   'level': 'DEBUG',
    #   'handlers': ['console']
    # },
    # 'django': {
    #   'level': 'DEBUG',
    #   'handlers': ['console'],
    # },
    # 'django.server': {
    #   'level': 'DEBUG',
    #   'handlers': ['console'],
    # },
    'django.request': {
      'handlers': ['console'],
      'level': 'DEBUG',  # change debug level as appropiate
      'propagate': False,
    },
  }
}

REST_FRAMEWORK = {
  # Rest framework settings
  'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication', ),
  'DEFAULT_PERMISSION_CLASSES': [
    'rest_framework.permissions.IsAuthenticated',
  ],
  'DEFAULT_RENDERER_CLASSES': ('djangorestframework_camel_case.render.CamelCaseJSONRenderer', ),
  'DEFAULT_PARSER_CLASSES': ('djangorestframework_camel_case.parser.CamelCaseJSONParser', ),
}

MIDDLEWARE = [
  'django.middleware.security.SecurityMiddleware',
  'django.contrib.sessions.middleware.SessionMiddleware',
  'corsheaders.middleware.CorsMiddleware',
  'django.middleware.common.CommonMiddleware',
  'django.middleware.csrf.CsrfViewMiddleware',
  'django.contrib.auth.middleware.AuthenticationMiddleware',
  'django.contrib.messages.middleware.MessageMiddleware',
  'django.middleware.clickjacking.XFrameOptionsMiddleware',
  'request_logging.middleware.LoggingMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'config.urls'


WSGI_APPLICATION = 'config.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
  {
    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    'OPTIONS': {
      'min_length': 8,
    }
  },
  # {
  #   'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
  # },
  {
    'NAME': 'moca.validators.passwords.NumberValidator',
  },
  {
    'NAME': 'moca.validators.passwords.UppercaseValidator',
  },
  {
    'NAME': 'moca.validators.passwords.LowercaseValidator',
  },
  # {
  #   'NAME': 'moca.validators.passwords.SymbolValidator',
  # },
]

REST_KNOX = {
  'TOKEN_TTL': timedelta(weeks=1),
  'AUTO_REFRESH': True,
}

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

def get_service_host():
  return os.environ.get('MOCA_SERVICE', 'http://0.0.0.0:8000')

 # Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = join(os.path.dirname(BASE_DIR), 'static')
STATICFILES_DIRS = ['moca-website/build']
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# Media files
MEDIA_URL = get_service_host() + '/media/'
MEDIA_ROOT = join(os.path.dirname(BASE_DIR), 'media')

TEMPLATES = [
  {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [STATIC_ROOT],
    'APP_DIRS': True,
    'OPTIONS': {
      'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
      ],
    },
  },
]

DATA_UPLOAD_MAX_MEMORY_SIZE = 26214400

# APPEND_SLASH=False

EMAIL_HOST = os.getenv('DJANGO_EMAIL_HOST')
EMAIL_HOST_USER = os.getenv('DJANGO_EMAIL_HOST_USER')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = os.getenv('DJANGO_EMAIL_HOST_PASSWORD')
EMAIL_PORT = 587
EMAIL_USE_SSL = False
EMAIL_USE_TLS = True
EMAIL_VERIFICATION = True

SWAGGER_SETTINGS = {'DISPLAY_OPERATION_ID': False}

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
